// ignore_for_file: public_member_api_docs, sort_constructors_first
import 'dart:convert';

import 'package:meta/meta.dart';

@immutable
class CommunityModel {
  CommunityModel({
    required this.id, // Can be auto generated by firebase or we will see
    required this.name,
    this.members,
    this.profilePicture,
    this.latestMessage,
  });

  final String id;
  final String name;
  final String? profilePicture;
  final String? latestMessage;
  final List<String>? members;

  Map<String, dynamic> toMap() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'profilePicture': profilePicture,
      'latestMessage': latestMessage,
    };
  }

  factory CommunityModel.fromMap(Map<String, dynamic> map) {
    return CommunityModel(
      id: map['id'] as String,
      name: map['name'] as String,
      profilePicture: map['profilePicture'] != null
          ? map['profilePicture'] as String
          : null,
      latestMessage:
          map['latestMessage'] != null ? map['latestMessage'] as String : null,
      members: map['members'] != null ? map['members'] as List<String> : null,
    );
  }

  String toJson() => json.encode(toMap());

  factory CommunityModel.fromJson(String source) =>
      CommunityModel.fromMap(json.decode(source) as Map<String, dynamic>);

  get membersCount => members?.length ?? 0;
  get latestMessageText => latestMessage;
  get profilePictureUrl => profilePicture;

  List<CommunityModel> communities = [];
  //   CommunityModel(id: 'flutter', name: 'Flutter'),
  //   CommunityModel(id: 'react', name: 'React'),
  // ];

  // List<CommunityModel> get communities => _communities;

  void addCommunties({required String name, List<String> members = const []}) {
    final community = CommunityModel(id: 'dummy', name: name, members: members);
    communities.add(community);
    // Notify the Listeners
  }
}
